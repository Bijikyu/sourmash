<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (py.test:5) (10 samples, 1.18%)</title><rect x="0.0000%" y="52" width="1.1820%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.18%)</title><rect x="0.0000%" y="68" width="1.1820%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.18%)</title><rect x="0.0000%" y="84" width="1.1820%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.18%)</title><rect x="0.0000%" y="100" width="1.1820%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.18%)</title><rect x="0.0000%" y="116" width="1.1820%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.18%)</title><rect x="0.0000%" y="132" width="1.1820%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="142.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py:28) (15 samples, 1.77%)</title><rect x="1.7730%" y="724" width="1.7730%" height="15" fill="rgb(207,160,47)"/><text x="2.0230%" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.77%)</title><rect x="1.7730%" y="740" width="1.7730%" height="15" fill="rgb(228,23,34)"/><text x="2.0230%" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.77%)</title><rect x="1.7730%" y="756" width="1.7730%" height="15" fill="rgb(218,30,26)"/><text x="2.0230%" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.77%)</title><rect x="1.7730%" y="772" width="1.7730%" height="15" fill="rgb(220,122,19)"/><text x="2.0230%" y="782.50">_..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (15 samples, 1.77%)</title><rect x="1.7730%" y="788" width="1.7730%" height="15" fill="rgb(250,228,42)"/><text x="2.0230%" y="798.50">e..</text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:107) (17 samples, 2.01%)</title><rect x="1.6548%" y="612" width="2.0095%" height="15" fill="rgb(240,193,28)"/><text x="1.9048%" y="622.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (17 samples, 2.01%)</title><rect x="1.6548%" y="628" width="2.0095%" height="15" fill="rgb(216,20,37)"/><text x="1.9048%" y="638.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 2.01%)</title><rect x="1.6548%" y="644" width="2.0095%" height="15" fill="rgb(206,188,39)"/><text x="1.9048%" y="654.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 2.01%)</title><rect x="1.6548%" y="660" width="2.0095%" height="15" fill="rgb(217,207,13)"/><text x="1.9048%" y="670.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 2.01%)</title><rect x="1.6548%" y="676" width="2.0095%" height="15" fill="rgb(231,73,38)"/><text x="1.9048%" y="686.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 2.01%)</title><rect x="1.6548%" y="692" width="2.0095%" height="15" fill="rgb(225,20,46)"/><text x="1.9048%" y="702.50">_..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (17 samples, 2.01%)</title><rect x="1.6548%" y="708" width="2.0095%" height="15" fill="rgb(210,31,41)"/><text x="1.9048%" y="718.50">e..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (19 samples, 2.25%)</title><rect x="1.6548%" y="516" width="2.2459%" height="15" fill="rgb(221,200,47)"/><text x="1.9048%" y="526.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 2.25%)</title><rect x="1.6548%" y="532" width="2.2459%" height="15" fill="rgb(226,26,5)"/><text x="1.9048%" y="542.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 2.25%)</title><rect x="1.6548%" y="548" width="2.2459%" height="15" fill="rgb(249,33,26)"/><text x="1.9048%" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 2.25%)</title><rect x="1.6548%" y="564" width="2.2459%" height="15" fill="rgb(235,183,28)"/><text x="1.9048%" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 2.25%)</title><rect x="1.6548%" y="580" width="2.2459%" height="15" fill="rgb(221,5,38)"/><text x="1.9048%" y="590.50">_..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (19 samples, 2.25%)</title><rect x="1.6548%" y="596" width="2.2459%" height="15" fill="rgb(247,18,42)"/><text x="1.9048%" y="606.50">e..</text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:36) (13 samples, 1.54%)</title><rect x="4.1371%" y="564" width="1.5366%" height="15" fill="rgb(241,131,45)"/><text x="4.3871%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.54%)</title><rect x="4.1371%" y="580" width="1.5366%" height="15" fill="rgb(249,31,29)"/><text x="4.3871%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.54%)</title><rect x="4.1371%" y="596" width="1.5366%" height="15" fill="rgb(225,111,53)"/><text x="4.3871%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.54%)</title><rect x="4.1371%" y="612" width="1.5366%" height="15" fill="rgb(238,160,17)"/><text x="4.3871%" y="622.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (13 samples, 1.54%)</title><rect x="4.1371%" y="628" width="1.5366%" height="15" fill="rgb(214,148,48)"/><text x="4.3871%" y="638.50"></text></g><g><title>_preparse (_pytest/config/__init__.py:1002) (41 samples, 4.85%)</title><rect x="1.6548%" y="196" width="4.8463%" height="15" fill="rgb(232,36,49)"/><text x="1.9048%" y="206.50">_prepa..</text></g><g><title>__call__ (pluggy/hooks.py:286) (41 samples, 4.85%)</title><rect x="1.6548%" y="212" width="4.8463%" height="15" fill="rgb(209,103,24)"/><text x="1.9048%" y="222.50">__call..</text></g><g><title>_hookexec (pluggy/manager.py:93) (41 samples, 4.85%)</title><rect x="1.6548%" y="228" width="4.8463%" height="15" fill="rgb(229,88,8)"/><text x="1.9048%" y="238.50">_hooke..</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (41 samples, 4.85%)</title><rect x="1.6548%" y="244" width="4.8463%" height="15" fill="rgb(213,181,19)"/><text x="1.9048%" y="254.50">&lt;lambd..</text></g><g><title>_multicall (pluggy/callers.py:187) (41 samples, 4.85%)</title><rect x="1.6548%" y="260" width="4.8463%" height="15" fill="rgb(254,191,54)"/><text x="1.9048%" y="270.50">_multi..</text></g><g><title>pytest_load_initial_conftests (_pytest/config/__init__.py:899) (41 samples, 4.85%)</title><rect x="1.6548%" y="276" width="4.8463%" height="15" fill="rgb(241,83,37)"/><text x="1.9048%" y="286.50">pytest..</text></g><g><title>_set_initial_conftests (_pytest/config/__init__.py:441) (41 samples, 4.85%)</title><rect x="1.6548%" y="292" width="4.8463%" height="15" fill="rgb(233,36,39)"/><text x="1.9048%" y="302.50">_set_i..</text></g><g><title>_try_load_conftest (_pytest/config/__init__.py:447) (41 samples, 4.85%)</title><rect x="1.6548%" y="308" width="4.8463%" height="15" fill="rgb(226,3,54)"/><text x="1.9048%" y="318.50">_try_l..</text></g><g><title>_getconftestmodules (_pytest/config/__init__.py:473) (41 samples, 4.85%)</title><rect x="1.6548%" y="324" width="4.8463%" height="15" fill="rgb(245,192,40)"/><text x="1.9048%" y="334.50">_getco..</text></g><g><title>_importconftest (_pytest/config/__init__.py:501) (41 samples, 4.85%)</title><rect x="1.6548%" y="340" width="4.8463%" height="15" fill="rgb(238,167,29)"/><text x="1.9048%" y="350.50">_impor..</text></g><g><title>pyimport (py/_path/local.py:704) (41 samples, 4.85%)</title><rect x="1.6548%" y="356" width="4.8463%" height="15" fill="rgb(232,182,51)"/><text x="1.9048%" y="366.50">pyimpo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (41 samples, 4.85%)</title><rect x="1.6548%" y="372" width="4.8463%" height="15" fill="rgb(231,60,39)"/><text x="1.9048%" y="382.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (41 samples, 4.85%)</title><rect x="1.6548%" y="388" width="4.8463%" height="15" fill="rgb(208,69,12)"/><text x="1.9048%" y="398.50">_find_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (41 samples, 4.85%)</title><rect x="1.6548%" y="404" width="4.8463%" height="15" fill="rgb(235,93,37)"/><text x="1.9048%" y="414.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (41 samples, 4.85%)</title><rect x="1.6548%" y="420" width="4.8463%" height="15" fill="rgb(213,116,39)"/><text x="1.9048%" y="430.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (41 samples, 4.85%)</title><rect x="1.6548%" y="436" width="4.8463%" height="15" fill="rgb(222,207,29)"/><text x="1.9048%" y="446.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (41 samples, 4.85%)</title><rect x="1.6548%" y="452" width="4.8463%" height="15" fill="rgb(206,96,30)"/><text x="1.9048%" y="462.50">_load_..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (41 samples, 4.85%)</title><rect x="1.6548%" y="468" width="4.8463%" height="15" fill="rgb(218,138,4)"/><text x="1.9048%" y="478.50">exec_m..</text></g><g><title>&lt;module&gt; (tests/__init__.py:1) (41 samples, 4.85%)</title><rect x="1.6548%" y="484" width="4.8463%" height="15" fill="rgb(250,191,14)"/><text x="1.9048%" y="494.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (41 samples, 4.85%)</title><rect x="1.6548%" y="500" width="4.8463%" height="15" fill="rgb(239,60,40)"/><text x="1.9048%" y="510.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (22 samples, 2.60%)</title><rect x="3.9007%" y="516" width="2.6005%" height="15" fill="rgb(206,27,48)"/><text x="4.1507%" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (22 samples, 2.60%)</title><rect x="3.9007%" y="532" width="2.6005%" height="15" fill="rgb(225,35,8)"/><text x="4.1507%" y="542.50">_l..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (21 samples, 2.48%)</title><rect x="4.0189%" y="548" width="2.4823%" height="15" fill="rgb(250,213,24)"/><text x="4.2689%" y="558.50">ex..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 1.30%)</title><rect x="6.9740%" y="292" width="1.3002%" height="15" fill="rgb(247,123,22)"/><text x="7.2240%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.30%)</title><rect x="6.9740%" y="308" width="1.3002%" height="15" fill="rgb(231,138,38)"/><text x="7.2240%" y="318.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 1.30%)</title><rect x="6.9740%" y="324" width="1.3002%" height="15" fill="rgb(231,145,46)"/><text x="7.2240%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.30%)</title><rect x="6.9740%" y="340" width="1.3002%" height="15" fill="rgb(251,118,11)"/><text x="7.2240%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 1.30%)</title><rect x="6.9740%" y="356" width="1.3002%" height="15" fill="rgb(217,147,25)"/><text x="7.2240%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.30%)</title><rect x="6.9740%" y="372" width="1.3002%" height="15" fill="rgb(247,81,37)"/><text x="7.2240%" y="382.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 1.30%)</title><rect x="6.9740%" y="388" width="1.3002%" height="15" fill="rgb(209,12,38)"/><text x="7.2240%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.30%)</title><rect x="6.9740%" y="404" width="1.3002%" height="15" fill="rgb(227,1,9)"/><text x="7.2240%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.30%)</title><rect x="6.9740%" y="420" width="1.3002%" height="15" fill="rgb(248,47,43)"/><text x="7.2240%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.30%)</title><rect x="6.9740%" y="436" width="1.3002%" height="15" fill="rgb(221,10,30)"/><text x="7.2240%" y="446.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (11 samples, 1.30%)</title><rect x="6.9740%" y="452" width="1.3002%" height="15" fill="rgb(210,229,1)"/><text x="7.2240%" y="462.50"></text></g><g><title>&lt;module&gt; (hypothesis/__init__.py:26) (9 samples, 1.06%)</title><rect x="7.2104%" y="468" width="1.0638%" height="15" fill="rgb(222,148,37)"/><text x="7.4604%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.06%)</title><rect x="7.2104%" y="484" width="1.0638%" height="15" fill="rgb(234,67,33)"/><text x="7.4604%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.06%)</title><rect x="7.2104%" y="500" width="1.0638%" height="15" fill="rgb(247,98,35)"/><text x="7.4604%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.06%)</title><rect x="7.2104%" y="516" width="1.0638%" height="15" fill="rgb(247,138,52)"/><text x="7.4604%" y="526.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (9 samples, 1.06%)</title><rect x="7.2104%" y="532" width="1.0638%" height="15" fill="rgb(213,79,30)"/><text x="7.4604%" y="542.50"></text></g><g><title>main (_pytest/config/__init__.py:105) (66 samples, 7.80%)</title><rect x="1.1820%" y="68" width="7.8014%" height="15" fill="rgb(246,177,23)"/><text x="1.4320%" y="78.50">main (_pyte..</text></g><g><title>_prepareconfig (_pytest/config/__init__.py:258) (62 samples, 7.33%)</title><rect x="1.6548%" y="84" width="7.3286%" height="15" fill="rgb(230,62,27)"/><text x="1.9048%" y="94.50">_prepareco..</text></g><g><title>__call__ (pluggy/hooks.py:286) (62 samples, 7.33%)</title><rect x="1.6548%" y="100" width="7.3286%" height="15" fill="rgb(216,154,8)"/><text x="1.9048%" y="110.50">__call__ (..</text></g><g><title>_hookexec (pluggy/manager.py:93) (62 samples, 7.33%)</title><rect x="1.6548%" y="116" width="7.3286%" height="15" fill="rgb(244,35,45)"/><text x="1.9048%" y="126.50">_hookexec ..</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (62 samples, 7.33%)</title><rect x="1.6548%" y="132" width="7.3286%" height="15" fill="rgb(251,115,12)"/><text x="1.9048%" y="142.50">&lt;lambda&gt; (..</text></g><g><title>_multicall (pluggy/callers.py:187) (62 samples, 7.33%)</title><rect x="1.6548%" y="148" width="7.3286%" height="15" fill="rgb(240,54,50)"/><text x="1.9048%" y="158.50">_multicall..</text></g><g><title>pytest_cmdline_parse (_pytest/config/__init__.py:836) (62 samples, 7.33%)</title><rect x="1.6548%" y="164" width="7.3286%" height="15" fill="rgb(233,84,52)"/><text x="1.9048%" y="174.50">pytest_cmd..</text></g><g><title>parse (_pytest/config/__init__.py:1044) (62 samples, 7.33%)</title><rect x="1.6548%" y="180" width="7.3286%" height="15" fill="rgb(207,117,47)"/><text x="1.9048%" y="190.50">parse (_py..</text></g><g><title>_preparse (_pytest/config/__init__.py:992) (19 samples, 2.25%)</title><rect x="6.7376%" y="196" width="2.2459%" height="15" fill="rgb(249,43,39)"/><text x="6.9876%" y="206.50">_..</text></g><g><title>load_setuptools_entrypoints (pluggy/manager.py:299) (17 samples, 2.01%)</title><rect x="6.9740%" y="212" width="2.0095%" height="15" fill="rgb(209,38,44)"/><text x="7.2240%" y="222.50">l..</text></g><g><title>load (importlib_metadata/__init__.py:105) (17 samples, 2.01%)</title><rect x="6.9740%" y="228" width="2.0095%" height="15" fill="rgb(236,212,23)"/><text x="7.2240%" y="238.50">l..</text></g><g><title>import_module (importlib/__init__.py:127) (17 samples, 2.01%)</title><rect x="6.9740%" y="244" width="2.0095%" height="15" fill="rgb(242,79,21)"/><text x="7.2240%" y="254.50">i..</text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (17 samples, 2.01%)</title><rect x="6.9740%" y="260" width="2.0095%" height="15" fill="rgb(211,96,35)"/><text x="7.2240%" y="270.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 2.01%)</title><rect x="6.9740%" y="276" width="2.0095%" height="15" fill="rgb(253,215,40)"/><text x="7.2240%" y="286.50">_..</text></g><g><title>&lt;module&gt; (tests/test_lca.py:10) (13 samples, 1.54%)</title><rect x="9.2199%" y="612" width="1.5366%" height="15" fill="rgb(211,81,21)"/><text x="9.4699%" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (13 samples, 1.54%)</title><rect x="9.2199%" y="628" width="1.5366%" height="15" fill="rgb(208,190,38)"/><text x="9.4699%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 1.54%)</title><rect x="9.2199%" y="644" width="1.5366%" height="15" fill="rgb(235,213,38)"/><text x="9.4699%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.54%)</title><rect x="9.2199%" y="660" width="1.5366%" height="15" fill="rgb(237,122,38)"/><text x="9.4699%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.54%)</title><rect x="9.2199%" y="676" width="1.5366%" height="15" fill="rgb(244,218,35)"/><text x="9.4699%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.54%)</title><rect x="9.2199%" y="692" width="1.5366%" height="15" fill="rgb(240,68,47)"/><text x="9.4699%" y="702.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (13 samples, 1.54%)</title><rect x="9.2199%" y="708" width="1.5366%" height="15" fill="rgb(210,16,53)"/><text x="9.4699%" y="718.50"></text></g><g><title>&lt;module&gt; (tests/sourmash_tst_utils.py:11) (13 samples, 1.54%)</title><rect x="9.2199%" y="724" width="1.5366%" height="15" fill="rgb(235,124,12)"/><text x="9.4699%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.54%)</title><rect x="9.2199%" y="740" width="1.5366%" height="15" fill="rgb(224,169,11)"/><text x="9.4699%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.54%)</title><rect x="9.2199%" y="756" width="1.5366%" height="15" fill="rgb(250,166,2)"/><text x="9.4699%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.54%)</title><rect x="9.2199%" y="772" width="1.5366%" height="15" fill="rgb(242,216,29)"/><text x="9.4699%" y="782.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (10 samples, 1.18%)</title><rect x="9.5745%" y="788" width="1.1820%" height="15" fill="rgb(230,116,27)"/><text x="9.8245%" y="798.50"></text></g><g><title>collect (_pytest/python.py:446) (17 samples, 2.01%)</title><rect x="9.2199%" y="452" width="2.0095%" height="15" fill="rgb(228,99,48)"/><text x="9.4699%" y="462.50">c..</text></g><g><title>_inject_setup_module_fixture (_pytest/python.py:459) (17 samples, 2.01%)</title><rect x="9.2199%" y="468" width="2.0095%" height="15" fill="rgb(253,11,6)"/><text x="9.4699%" y="478.50">_..</text></g><g><title>obj (_pytest/python.py:261) (17 samples, 2.01%)</title><rect x="9.2199%" y="484" width="2.0095%" height="15" fill="rgb(247,143,39)"/><text x="9.4699%" y="494.50">o..</text></g><g><title>_getobj (_pytest/python.py:443) (17 samples, 2.01%)</title><rect x="9.2199%" y="500" width="2.0095%" height="15" fill="rgb(236,97,10)"/><text x="9.4699%" y="510.50">_..</text></g><g><title>_importtestmodule (_pytest/python.py:511) (17 samples, 2.01%)</title><rect x="9.2199%" y="516" width="2.0095%" height="15" fill="rgb(233,208,19)"/><text x="9.4699%" y="526.50">_..</text></g><g><title>pyimport (py/_path/local.py:704) (17 samples, 2.01%)</title><rect x="9.2199%" y="532" width="2.0095%" height="15" fill="rgb(216,164,2)"/><text x="9.4699%" y="542.50">p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 2.01%)</title><rect x="9.2199%" y="548" width="2.0095%" height="15" fill="rgb(220,129,5)"/><text x="9.4699%" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 2.01%)</title><rect x="9.2199%" y="564" width="2.0095%" height="15" fill="rgb(242,17,10)"/><text x="9.4699%" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 2.01%)</title><rect x="9.2199%" y="580" width="2.0095%" height="15" fill="rgb(242,107,0)"/><text x="9.4699%" y="590.50">_..</text></g><g><title>exec_module (_pytest/assertion/rewrite.py:152) (17 samples, 2.01%)</title><rect x="9.2199%" y="596" width="2.0095%" height="15" fill="rgb(251,28,31)"/><text x="9.4699%" y="606.50">e..</text></g><g><title>genitems (_pytest/main.py:681) (19 samples, 2.25%)</title><rect x="9.2199%" y="308" width="2.2459%" height="15" fill="rgb(233,223,10)"/><text x="9.4699%" y="318.50">g..</text></g><g><title>collect_one_node (_pytest/runner.py:382) (19 samples, 2.25%)</title><rect x="9.2199%" y="324" width="2.2459%" height="15" fill="rgb(215,21,27)"/><text x="9.4699%" y="334.50">c..</text></g><g><title>__call__ (pluggy/hooks.py:286) (19 samples, 2.25%)</title><rect x="9.2199%" y="340" width="2.2459%" height="15" fill="rgb(232,23,21)"/><text x="9.4699%" y="350.50">_..</text></g><g><title>_hookexec (pluggy/manager.py:93) (19 samples, 2.25%)</title><rect x="9.2199%" y="356" width="2.2459%" height="15" fill="rgb(244,5,23)"/><text x="9.4699%" y="366.50">_..</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (19 samples, 2.25%)</title><rect x="9.2199%" y="372" width="2.2459%" height="15" fill="rgb(226,81,46)"/><text x="9.4699%" y="382.50">&lt;..</text></g><g><title>_multicall (pluggy/callers.py:187) (19 samples, 2.25%)</title><rect x="9.2199%" y="388" width="2.2459%" height="15" fill="rgb(247,70,30)"/><text x="9.4699%" y="398.50">_..</text></g><g><title>pytest_make_collect_report (_pytest/runner.py:264) (19 samples, 2.25%)</title><rect x="9.2199%" y="404" width="2.2459%" height="15" fill="rgb(212,68,19)"/><text x="9.4699%" y="414.50">p..</text></g><g><title>from_call (_pytest/runner.py:244) (19 samples, 2.25%)</title><rect x="9.2199%" y="420" width="2.2459%" height="15" fill="rgb(240,187,13)"/><text x="9.4699%" y="430.50">f..</text></g><g><title>&lt;lambda&gt; (_pytest/runner.py:264) (19 samples, 2.25%)</title><rect x="9.2199%" y="436" width="2.2459%" height="15" fill="rgb(223,113,26)"/><text x="9.4699%" y="446.50">&lt;..</text></g><g><title>_main (_pytest/main.py:246) (20 samples, 2.36%)</title><rect x="9.2199%" y="180" width="2.3641%" height="15" fill="rgb(206,192,2)"/><text x="9.4699%" y="190.50">_m..</text></g><g><title>__call__ (pluggy/hooks.py:286) (20 samples, 2.36%)</title><rect x="9.2199%" y="196" width="2.3641%" height="15" fill="rgb(241,108,4)"/><text x="9.4699%" y="206.50">__..</text></g><g><title>_hookexec (pluggy/manager.py:93) (20 samples, 2.36%)</title><rect x="9.2199%" y="212" width="2.3641%" height="15" fill="rgb(247,173,49)"/><text x="9.4699%" y="222.50">_h..</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (20 samples, 2.36%)</title><rect x="9.2199%" y="228" width="2.3641%" height="15" fill="rgb(224,114,35)"/><text x="9.4699%" y="238.50">&lt;l..</text></g><g><title>_multicall (pluggy/callers.py:187) (20 samples, 2.36%)</title><rect x="9.2199%" y="244" width="2.3641%" height="15" fill="rgb(245,159,27)"/><text x="9.4699%" y="254.50">_m..</text></g><g><title>pytest_collection (_pytest/main.py:257) (20 samples, 2.36%)</title><rect x="9.2199%" y="260" width="2.3641%" height="15" fill="rgb(245,172,44)"/><text x="9.4699%" y="270.50">py..</text></g><g><title>perform_collect (_pytest/main.py:452) (20 samples, 2.36%)</title><rect x="9.2199%" y="276" width="2.3641%" height="15" fill="rgb(236,23,11)"/><text x="9.4699%" y="286.50">pe..</text></g><g><title>_perform_collect (_pytest/main.py:490) (20 samples, 2.36%)</title><rect x="9.2199%" y="292" width="2.3641%" height="15" fill="rgb(205,117,38)"/><text x="9.4699%" y="302.50">_p..</text></g><g><title>main (sourmash/__main__.py:13) (12 samples, 1.42%)</title><rect x="19.7400%" y="660" width="1.4184%" height="15" fill="rgb(237,72,25)"/><text x="19.9900%" y="670.50"></text></g><g><title>main (sourmash/cli/lca/compare_csv.py:35) (12 samples, 1.42%)</title><rect x="19.7400%" y="676" width="1.4184%" height="15" fill="rgb(244,70,9)"/><text x="19.9900%" y="686.50"></text></g><g><title>test_compare_csv_real (tests/test_lca.py:1530) (13 samples, 1.54%)</title><rect x="19.7400%" y="612" width="1.5366%" height="15" fill="rgb(217,125,39)"/><text x="19.9900%" y="622.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (13 samples, 1.54%)</title><rect x="19.7400%" y="628" width="1.5366%" height="15" fill="rgb(235,36,10)"/><text x="19.9900%" y="638.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (13 samples, 1.54%)</title><rect x="19.7400%" y="644" width="1.5366%" height="15" fill="rgb(251,123,47)"/><text x="19.9900%" y="654.50"></text></g><g><title>main (sourmash/__main__.py:13) (10 samples, 1.18%)</title><rect x="29.3144%" y="660" width="1.1820%" height="15" fill="rgb(221,13,13)"/><text x="29.5644%" y="670.50"></text></g><g><title>main (sourmash/cli/lca/classify.py:34) (10 samples, 1.18%)</title><rect x="29.3144%" y="676" width="1.1820%" height="15" fill="rgb(238,131,9)"/><text x="29.5644%" y="686.50"></text></g><g><title>test_multi_db_multi_query_classify_traverse (tests/test_lca.py:789) (11 samples, 1.30%)</title><rect x="29.3144%" y="612" width="1.3002%" height="15" fill="rgb(211,50,8)"/><text x="29.5644%" y="622.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (11 samples, 1.30%)</title><rect x="29.3144%" y="628" width="1.3002%" height="15" fill="rgb(245,182,24)"/><text x="29.5644%" y="638.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (11 samples, 1.30%)</title><rect x="29.3144%" y="644" width="1.3002%" height="15" fill="rgb(242,14,37)"/><text x="29.5644%" y="654.50"></text></g><g><title>main (sourmash/__main__.py:13) (9 samples, 1.06%)</title><rect x="30.6147%" y="660" width="1.0638%" height="15" fill="rgb(246,228,12)"/><text x="30.8647%" y="670.50"></text></g><g><title>main (sourmash/cli/lca/classify.py:34) (9 samples, 1.06%)</title><rect x="30.6147%" y="676" width="1.0638%" height="15" fill="rgb(213,55,15)"/><text x="30.8647%" y="686.50"></text></g><g><title>test_multi_query_classify_traverse (tests/test_lca.py:701) (10 samples, 1.18%)</title><rect x="30.6147%" y="612" width="1.1820%" height="15" fill="rgb(209,9,3)"/><text x="30.8647%" y="622.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (10 samples, 1.18%)</title><rect x="30.6147%" y="628" width="1.1820%" height="15" fill="rgb(230,59,30)"/><text x="30.8647%" y="638.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (10 samples, 1.18%)</title><rect x="30.6147%" y="644" width="1.1820%" height="15" fill="rgb(209,121,21)"/><text x="30.8647%" y="654.50"></text></g><g><title>make_lca_counts (sourmash/lca/command_rankinfo.py:29) (14 samples, 1.65%)</title><rect x="34.5154%" y="708" width="1.6548%" height="15" fill="rgb(220,109,13)"/><text x="34.7654%" y="718.50"></text></g><g><title>main (sourmash/__main__.py:13) (18 samples, 2.13%)</title><rect x="34.3972%" y="660" width="2.1277%" height="15" fill="rgb(232,18,1)"/><text x="34.6472%" y="670.50">m..</text></g><g><title>main (sourmash/cli/lca/rankinfo.py:23) (18 samples, 2.13%)</title><rect x="34.3972%" y="676" width="2.1277%" height="15" fill="rgb(215,41,42)"/><text x="34.6472%" y="686.50">m..</text></g><g><title>rankinfo_main (sourmash/lca/command_rankinfo.py:68) (18 samples, 2.13%)</title><rect x="34.3972%" y="692" width="2.1277%" height="15" fill="rgb(224,123,36)"/><text x="34.6472%" y="702.50">r..</text></g><g><title>test_rankinfo_on_multi (tests/test_lca.py:1415) (22 samples, 2.60%)</title><rect x="34.3972%" y="612" width="2.6005%" height="15" fill="rgb(240,125,3)"/><text x="34.6472%" y="622.50">te..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (22 samples, 2.60%)</title><rect x="34.3972%" y="628" width="2.6005%" height="15" fill="rgb(205,98,50)"/><text x="34.6472%" y="638.50">ru..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (22 samples, 2.60%)</title><rect x="34.3972%" y="644" width="2.6005%" height="15" fill="rgb(205,185,37)"/><text x="34.6472%" y="654.50">_r..</text></g><g><title>make_lca_counts (sourmash/lca/command_rankinfo.py:29) (15 samples, 1.77%)</title><rect x="37.3522%" y="708" width="1.7730%" height="15" fill="rgb(238,207,15)"/><text x="37.6022%" y="718.50">m..</text></g><g><title>main (sourmash/__main__.py:13) (20 samples, 2.36%)</title><rect x="37.2340%" y="660" width="2.3641%" height="15" fill="rgb(213,199,42)"/><text x="37.4840%" y="670.50">ma..</text></g><g><title>main (sourmash/cli/lca/rankinfo.py:23) (20 samples, 2.36%)</title><rect x="37.2340%" y="676" width="2.3641%" height="15" fill="rgb(235,201,11)"/><text x="37.4840%" y="686.50">ma..</text></g><g><title>rankinfo_main (sourmash/lca/command_rankinfo.py:68) (19 samples, 2.25%)</title><rect x="37.3522%" y="692" width="2.2459%" height="15" fill="rgb(207,46,11)"/><text x="37.6022%" y="702.50">r..</text></g><g><title>test_rankinfo_on_single (tests/test_lca.py:1439) (22 samples, 2.60%)</title><rect x="37.2340%" y="612" width="2.6005%" height="15" fill="rgb(241,35,35)"/><text x="37.4840%" y="622.50">te..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (22 samples, 2.60%)</title><rect x="37.2340%" y="628" width="2.6005%" height="15" fill="rgb(243,32,47)"/><text x="37.4840%" y="638.50">ru..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (22 samples, 2.60%)</title><rect x="37.2340%" y="644" width="2.6005%" height="15" fill="rgb(247,202,23)"/><text x="37.4840%" y="654.50">_r..</text></g><g><title>main (sourmash/__main__.py:13) (10 samples, 1.18%)</title><rect x="40.0709%" y="660" width="1.1820%" height="15" fill="rgb(219,102,11)"/><text x="40.3209%" y="670.50"></text></g><g><title>main (sourmash/cli/lca/rankinfo.py:23) (10 samples, 1.18%)</title><rect x="40.0709%" y="676" width="1.1820%" height="15" fill="rgb(243,110,44)"/><text x="40.3209%" y="686.50"></text></g><g><title>rankinfo_main (sourmash/lca/command_rankinfo.py:68) (9 samples, 1.06%)</title><rect x="40.1891%" y="692" width="1.0638%" height="15" fill="rgb(222,74,54)"/><text x="40.4391%" y="702.50"></text></g><g><title>test_rankinfo_with_min (tests/test_lca.py:1488) (14 samples, 1.65%)</title><rect x="39.8345%" y="612" width="1.6548%" height="15" fill="rgb(216,99,12)"/><text x="40.0845%" y="622.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (14 samples, 1.65%)</title><rect x="39.8345%" y="628" width="1.6548%" height="15" fill="rgb(226,22,26)"/><text x="40.0845%" y="638.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (14 samples, 1.65%)</title><rect x="39.8345%" y="644" width="1.6548%" height="15" fill="rgb(217,163,10)"/><text x="40.0845%" y="654.50"></text></g><g><title>test_summarize_to_root_abund (tests/test_lca.py:1322) (9 samples, 1.06%)</title><rect x="48.6998%" y="612" width="1.0638%" height="15" fill="rgb(213,25,53)"/><text x="48.9498%" y="622.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (9 samples, 1.06%)</title><rect x="48.6998%" y="628" width="1.0638%" height="15" fill="rgb(252,105,26)"/><text x="48.9498%" y="638.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (9 samples, 1.06%)</title><rect x="48.6998%" y="644" width="1.0638%" height="15" fill="rgb(220,39,43)"/><text x="48.9498%" y="654.50"></text></g><g><title>subparser (sourmash/cli/sig/__init__.py:41) (9 samples, 1.06%)</title><rect x="50.3546%" y="692" width="1.0638%" height="15" fill="rgb(229,68,48)"/><text x="50.6046%" y="702.50"></text></g><g><title>test_summarize_to_root_abund (tests/test_lca.py:1333) (15 samples, 1.77%)</title><rect x="49.7636%" y="612" width="1.7730%" height="15" fill="rgb(252,8,32)"/><text x="50.0136%" y="622.50">t..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (15 samples, 1.77%)</title><rect x="49.7636%" y="628" width="1.7730%" height="15" fill="rgb(223,20,43)"/><text x="50.0136%" y="638.50">r..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (15 samples, 1.77%)</title><rect x="49.7636%" y="644" width="1.7730%" height="15" fill="rgb(229,81,49)"/><text x="50.0136%" y="654.50">_..</text></g><g><title>main (sourmash/__main__.py:5) (12 samples, 1.42%)</title><rect x="50.1182%" y="660" width="1.4184%" height="15" fill="rgb(236,28,36)"/><text x="50.3682%" y="670.50"></text></g><g><title>get_parser (sourmash/cli/__init__.py:132) (12 samples, 1.42%)</title><rect x="50.1182%" y="676" width="1.4184%" height="15" fill="rgb(249,185,26)"/><text x="50.3682%" y="686.50"></text></g><g><title>test_classify_majority_vote_1 (tests/test_lca.py:945) (12 samples, 1.42%)</title><rect x="56.8558%" y="628" width="1.4184%" height="15" fill="rgb(249,174,33)"/><text x="57.1058%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (12 samples, 1.42%)</title><rect x="56.8558%" y="644" width="1.4184%" height="15" fill="rgb(233,201,37)"/><text x="57.1058%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (12 samples, 1.42%)</title><rect x="56.8558%" y="660" width="1.4184%" height="15" fill="rgb(221,78,26)"/><text x="57.1058%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (12 samples, 1.42%)</title><rect x="56.8558%" y="676" width="1.4184%" height="15" fill="rgb(250,127,30)"/><text x="57.1058%" y="686.50"></text></g><g><title>test_classify_majority_vote_2 (tests/test_lca.py:969) (10 samples, 1.18%)</title><rect x="58.2742%" y="628" width="1.1820%" height="15" fill="rgb(230,49,44)"/><text x="58.5242%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (10 samples, 1.18%)</title><rect x="58.2742%" y="644" width="1.1820%" height="15" fill="rgb(229,67,23)"/><text x="58.5242%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (10 samples, 1.18%)</title><rect x="58.2742%" y="660" width="1.1820%" height="15" fill="rgb(249,83,47)"/><text x="58.5242%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (10 samples, 1.18%)</title><rect x="58.2742%" y="676" width="1.1820%" height="15" fill="rgb(215,43,3)"/><text x="58.5242%" y="686.50"></text></g><g><title>test_incompat_lca_db_ksize (tests/test_lca.py:1730) (10 samples, 1.18%)</title><rect x="61.8203%" y="628" width="1.1820%" height="15" fill="rgb(238,154,13)"/><text x="62.0703%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (10 samples, 1.18%)</title><rect x="61.8203%" y="644" width="1.1820%" height="15" fill="rgb(219,56,2)"/><text x="62.0703%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (10 samples, 1.18%)</title><rect x="61.8203%" y="660" width="1.1820%" height="15" fill="rgb(233,0,4)"/><text x="62.0703%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (10 samples, 1.18%)</title><rect x="61.8203%" y="676" width="1.1820%" height="15" fill="rgb(235,30,7)"/><text x="62.0703%" y="686.50"></text></g><g><title>test_incompat_lca_db_scaled (tests/test_lca.py:1664) (14 samples, 1.65%)</title><rect x="66.0757%" y="628" width="1.6548%" height="15" fill="rgb(250,79,13)"/><text x="66.3257%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (14 samples, 1.65%)</title><rect x="66.0757%" y="644" width="1.6548%" height="15" fill="rgb(211,146,34)"/><text x="66.3257%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (14 samples, 1.65%)</title><rect x="66.0757%" y="660" width="1.6548%" height="15" fill="rgb(228,22,38)"/><text x="66.3257%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (14 samples, 1.65%)</title><rect x="66.0757%" y="676" width="1.6548%" height="15" fill="rgb(235,168,5)"/><text x="66.3257%" y="686.50"></text></g><g><title>main (sourmash/__main__.py:13) (12 samples, 1.42%)</title><rect x="70.0946%" y="692" width="1.4184%" height="15" fill="rgb(221,155,16)"/><text x="70.3446%" y="702.50"></text></g><g><title>main (sourmash/cli/lca/index.py:59) (12 samples, 1.42%)</title><rect x="70.0946%" y="708" width="1.4184%" height="15" fill="rgb(215,215,53)"/><text x="70.3446%" y="718.50"></text></g><g><title>index (sourmash/lca/command_index.py:284) (11 samples, 1.30%)</title><rect x="70.2128%" y="724" width="1.3002%" height="15" fill="rgb(223,4,10)"/><text x="70.4628%" y="734.50"></text></g><g><title>save (sourmash/lca/lca_db.py:202) (11 samples, 1.30%)</title><rect x="70.2128%" y="740" width="1.3002%" height="15" fill="rgb(234,103,6)"/><text x="70.4628%" y="750.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (11 samples, 1.30%)</title><rect x="70.2128%" y="756" width="1.3002%" height="15" fill="rgb(227,97,0)"/><text x="70.4628%" y="766.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (11 samples, 1.30%)</title><rect x="70.2128%" y="772" width="1.3002%" height="15" fill="rgb(234,150,53)"/><text x="70.4628%" y="782.50"></text></g><g><title>test_lca_db_dayhoff_command_index (tests/test_lca.py:2220) (13 samples, 1.54%)</title><rect x="70.0946%" y="628" width="1.5366%" height="15" fill="rgb(228,201,54)"/><text x="70.3446%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (13 samples, 1.54%)</title><rect x="70.0946%" y="644" width="1.5366%" height="15" fill="rgb(222,22,37)"/><text x="70.3446%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (13 samples, 1.54%)</title><rect x="70.0946%" y="660" width="1.5366%" height="15" fill="rgb(237,53,32)"/><text x="70.3446%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (13 samples, 1.54%)</title><rect x="70.0946%" y="676" width="1.5366%" height="15" fill="rgb(233,25,53)"/><text x="70.3446%" y="686.50"></text></g><g><title>test_lca_db_dayhoff_save_load (tests/test_lca.py:2188) (9 samples, 1.06%)</title><rect x="72.1040%" y="628" width="1.0638%" height="15" fill="rgb(210,40,34)"/><text x="72.3540%" y="638.50"></text></g><g><title>save (sourmash/lca/lca_db.py:202) (9 samples, 1.06%)</title><rect x="72.1040%" y="644" width="1.0638%" height="15" fill="rgb(241,220,44)"/><text x="72.3540%" y="654.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (9 samples, 1.06%)</title><rect x="72.1040%" y="660" width="1.0638%" height="15" fill="rgb(235,28,35)"/><text x="72.3540%" y="670.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (9 samples, 1.06%)</title><rect x="72.1040%" y="676" width="1.0638%" height="15" fill="rgb(210,56,17)"/><text x="72.3540%" y="686.50"></text></g><g><title>test_lca_db_hp_save_load (tests/test_lca.py:2079) (12 samples, 1.42%)</title><rect x="74.8227%" y="628" width="1.4184%" height="15" fill="rgb(224,130,29)"/><text x="75.0727%" y="638.50"></text></g><g><title>save (sourmash/lca/lca_db.py:202) (12 samples, 1.42%)</title><rect x="74.8227%" y="644" width="1.4184%" height="15" fill="rgb(235,212,8)"/><text x="75.0727%" y="654.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (12 samples, 1.42%)</title><rect x="74.8227%" y="660" width="1.4184%" height="15" fill="rgb(223,33,50)"/><text x="75.0727%" y="670.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (12 samples, 1.42%)</title><rect x="74.8227%" y="676" width="1.4184%" height="15" fill="rgb(219,149,13)"/><text x="75.0727%" y="686.50"></text></g><g><title>main (sourmash/__main__.py:13) (22 samples, 2.60%)</title><rect x="76.3593%" y="692" width="2.6005%" height="15" fill="rgb(250,156,29)"/><text x="76.6093%" y="702.50">ma..</text></g><g><title>main (sourmash/cli/lca/index.py:59) (22 samples, 2.60%)</title><rect x="76.3593%" y="708" width="2.6005%" height="15" fill="rgb(216,193,19)"/><text x="76.6093%" y="718.50">ma..</text></g><g><title>index (sourmash/lca/command_index.py:284) (16 samples, 1.89%)</title><rect x="77.0686%" y="724" width="1.8913%" height="15" fill="rgb(216,135,14)"/><text x="77.3186%" y="734.50">i..</text></g><g><title>save (sourmash/lca/lca_db.py:202) (16 samples, 1.89%)</title><rect x="77.0686%" y="740" width="1.8913%" height="15" fill="rgb(241,47,5)"/><text x="77.3186%" y="750.50">s..</text></g><g><title>_methodcall (sourmash/utils.py:25) (16 samples, 1.89%)</title><rect x="77.0686%" y="756" width="1.8913%" height="15" fill="rgb(233,42,35)"/><text x="77.3186%" y="766.50">_..</text></g><g><title>rustcall (sourmash/utils.py:68) (16 samples, 1.89%)</title><rect x="77.0686%" y="772" width="1.8913%" height="15" fill="rgb(231,13,6)"/><text x="77.3186%" y="782.50">r..</text></g><g><title>test_lca_db_protein_command_index (tests/test_lca.py:2002) (23 samples, 2.72%)</title><rect x="76.3593%" y="628" width="2.7187%" height="15" fill="rgb(207,181,40)"/><text x="76.6093%" y="638.50">te..</text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (23 samples, 2.72%)</title><rect x="76.3593%" y="644" width="2.7187%" height="15" fill="rgb(254,173,49)"/><text x="76.6093%" y="654.50">ru..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (23 samples, 2.72%)</title><rect x="76.3593%" y="660" width="2.7187%" height="15" fill="rgb(221,1,38)"/><text x="76.6093%" y="670.50">ru..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (23 samples, 2.72%)</title><rect x="76.3593%" y="676" width="2.7187%" height="15" fill="rgb(206,124,46)"/><text x="76.6093%" y="686.50">_r..</text></g><g><title>test_lca_db_protein_save_load (tests/test_lca.py:1970) (19 samples, 2.25%)</title><rect x="80.0236%" y="628" width="2.2459%" height="15" fill="rgb(249,21,11)"/><text x="80.2736%" y="638.50">t..</text></g><g><title>save (sourmash/lca/lca_db.py:202) (19 samples, 2.25%)</title><rect x="80.0236%" y="644" width="2.2459%" height="15" fill="rgb(222,201,40)"/><text x="80.2736%" y="654.50">s..</text></g><g><title>_methodcall (sourmash/utils.py:25) (19 samples, 2.25%)</title><rect x="80.0236%" y="660" width="2.2459%" height="15" fill="rgb(235,61,29)"/><text x="80.2736%" y="670.50">_..</text></g><g><title>rustcall (sourmash/utils.py:68) (19 samples, 2.25%)</title><rect x="80.0236%" y="676" width="2.2459%" height="15" fill="rgb(219,207,3)"/><text x="80.2736%" y="686.50">r..</text></g><g><title>main (sourmash/__main__.py:13) (22 samples, 2.60%)</title><rect x="82.6241%" y="692" width="2.6005%" height="15" fill="rgb(222,56,46)"/><text x="82.8741%" y="702.50">ma..</text></g><g><title>main (sourmash/cli/lca/index.py:59) (22 samples, 2.60%)</title><rect x="82.6241%" y="708" width="2.6005%" height="15" fill="rgb(239,76,54)"/><text x="82.8741%" y="718.50">ma..</text></g><g><title>index (sourmash/lca/command_index.py:284) (19 samples, 2.25%)</title><rect x="82.9787%" y="724" width="2.2459%" height="15" fill="rgb(231,124,27)"/><text x="83.2287%" y="734.50">i..</text></g><g><title>save (sourmash/lca/lca_db.py:202) (19 samples, 2.25%)</title><rect x="82.9787%" y="740" width="2.2459%" height="15" fill="rgb(249,195,6)"/><text x="83.2287%" y="750.50">s..</text></g><g><title>_methodcall (sourmash/utils.py:25) (19 samples, 2.25%)</title><rect x="82.9787%" y="756" width="2.2459%" height="15" fill="rgb(237,174,47)"/><text x="83.2287%" y="766.50">_..</text></g><g><title>rustcall (sourmash/utils.py:68) (19 samples, 2.25%)</title><rect x="82.9787%" y="772" width="2.2459%" height="15" fill="rgb(206,201,31)"/><text x="83.2287%" y="782.50">r..</text></g><g><title>test_lca_index_empty (tests/test_lca.py:1788) (23 samples, 2.72%)</title><rect x="82.6241%" y="628" width="2.7187%" height="15" fill="rgb(231,57,52)"/><text x="82.8741%" y="638.50">te..</text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (23 samples, 2.72%)</title><rect x="82.6241%" y="644" width="2.7187%" height="15" fill="rgb(248,177,22)"/><text x="82.8741%" y="654.50">ru..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (23 samples, 2.72%)</title><rect x="82.6241%" y="660" width="2.7187%" height="15" fill="rgb(215,211,37)"/><text x="82.8741%" y="670.50">ru..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (23 samples, 2.72%)</title><rect x="82.6241%" y="676" width="2.7187%" height="15" fill="rgb(241,128,51)"/><text x="82.8741%" y="686.50">_r..</text></g><g><title>test_multi_query_classify_query_from_file (tests/test_lca.py:734) (11 samples, 1.30%)</title><rect x="85.4610%" y="628" width="1.3002%" height="15" fill="rgb(227,165,31)"/><text x="85.7110%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (11 samples, 1.30%)</title><rect x="85.4610%" y="644" width="1.3002%" height="15" fill="rgb(228,167,24)"/><text x="85.7110%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (11 samples, 1.30%)</title><rect x="85.4610%" y="660" width="1.3002%" height="15" fill="rgb(228,143,12)"/><text x="85.7110%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (11 samples, 1.30%)</title><rect x="85.4610%" y="676" width="1.3002%" height="15" fill="rgb(249,149,8)"/><text x="85.7110%" y="686.50"></text></g><g><title>test_multi_query_classify_query_from_file_and_query (tests/test_lca.py:765) (9 samples, 1.06%)</title><rect x="86.7612%" y="628" width="1.0638%" height="15" fill="rgb(243,35,44)"/><text x="87.0112%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (9 samples, 1.06%)</title><rect x="86.7612%" y="644" width="1.0638%" height="15" fill="rgb(246,89,9)"/><text x="87.0112%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (9 samples, 1.06%)</title><rect x="86.7612%" y="660" width="1.0638%" height="15" fill="rgb(233,213,13)"/><text x="87.0112%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (9 samples, 1.06%)</title><rect x="86.7612%" y="676" width="1.0638%" height="15" fill="rgb(233,141,41)"/><text x="87.0112%" y="686.50"></text></g><g><title>wrapper (tests/sourmash_tst_utils.py:230) (280 samples, 33.10%)</title><rect x="55.7920%" y="612" width="33.0969%" height="15" fill="rgb(239,167,4)"/><text x="56.0420%" y="622.50">wrapper (tests/sourmash_tst_utils.py:230)</text></g><g><title>test_lca_db_protein_command_search (tests/test_lca.py:2035) (9 samples, 1.06%)</title><rect x="92.0804%" y="628" width="1.0638%" height="15" fill="rgb(209,217,16)"/><text x="92.3304%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (9 samples, 1.06%)</title><rect x="92.0804%" y="644" width="1.0638%" height="15" fill="rgb(219,88,35)"/><text x="92.3304%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (9 samples, 1.06%)</title><rect x="92.0804%" y="660" width="1.0638%" height="15" fill="rgb(220,193,23)"/><text x="92.3304%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (9 samples, 1.06%)</title><rect x="92.0804%" y="676" width="1.0638%" height="15" fill="rgb(230,90,52)"/><text x="92.3304%" y="686.50"></text></g><g><title>test_lca_gather_deprecated_message (tests/test_lca.py:1706) (10 samples, 1.18%)</title><rect x="93.1442%" y="628" width="1.1820%" height="15" fill="rgb(252,106,19)"/><text x="93.3942%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (10 samples, 1.18%)</title><rect x="93.1442%" y="644" width="1.1820%" height="15" fill="rgb(206,74,20)"/><text x="93.3942%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (10 samples, 1.18%)</title><rect x="93.1442%" y="660" width="1.1820%" height="15" fill="rgb(230,138,44)"/><text x="93.3942%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (10 samples, 1.18%)</title><rect x="93.1442%" y="676" width="1.1820%" height="15" fill="rgb(235,182,43)"/><text x="93.3942%" y="686.50"></text></g><g><title>test_lca_gather_protein (tests/test_lca.py:1691) (9 samples, 1.06%)</title><rect x="94.3262%" y="628" width="1.0638%" height="15" fill="rgb(242,16,51)"/><text x="94.5762%" y="638.50"></text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (9 samples, 1.06%)</title><rect x="94.3262%" y="644" width="1.0638%" height="15" fill="rgb(248,9,4)"/><text x="94.5762%" y="654.50"></text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (9 samples, 1.06%)</title><rect x="94.3262%" y="660" width="1.0638%" height="15" fill="rgb(210,31,22)"/><text x="94.5762%" y="670.50"></text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (9 samples, 1.06%)</title><rect x="94.3262%" y="676" width="1.0638%" height="15" fill="rgb(239,54,39)"/><text x="94.5762%" y="686.50"></text></g><g><title>summarize_main (sourmash/lca/command_summarize.py:202) (9 samples, 1.06%)</title><rect x="96.9267%" y="724" width="1.0638%" height="15" fill="rgb(230,99,41)"/><text x="97.1767%" y="734.50"></text></g><g><title>main (sourmash/__main__.py:13) (13 samples, 1.54%)</title><rect x="96.6903%" y="692" width="1.5366%" height="15" fill="rgb(253,106,12)"/><text x="96.9403%" y="702.50"></text></g><g><title>main (sourmash/cli/lca/summarize.py:36) (13 samples, 1.54%)</title><rect x="96.6903%" y="708" width="1.5366%" height="15" fill="rgb(213,46,41)"/><text x="96.9403%" y="718.50"></text></g><g><title>_multicall (pluggy/callers.py:187) (736 samples, 87.00%)</title><rect x="11.5839%" y="580" width="86.9976%" height="15" fill="rgb(215,133,35)"/><text x="11.8339%" y="590.50">_multicall (pluggy/callers.py:187)</text></g><g><title>pytest_pyfunc_call (_pytest/python.py:182) (736 samples, 87.00%)</title><rect x="11.5839%" y="596" width="86.9976%" height="15" fill="rgb(213,28,5)"/><text x="11.8339%" y="606.50">pytest_pyfunc_call (_pytest/python.py:182)</text></g><g><title>wrapper (tests/sourmash_tst_utils.py:239) (82 samples, 9.69%)</title><rect x="88.8889%" y="612" width="9.6927%" height="15" fill="rgb(215,77,49)"/><text x="89.1389%" y="622.50">wrapper (tests..</text></g><g><title>test_lca_summarize_abund_hmp (tests/test_lca.py:1378) (16 samples, 1.89%)</title><rect x="96.6903%" y="628" width="1.8913%" height="15" fill="rgb(248,100,22)"/><text x="96.9403%" y="638.50">t..</text></g><g><title>run_sourmash (tests/sourmash_tst_utils.py:188) (16 samples, 1.89%)</title><rect x="96.6903%" y="644" width="1.8913%" height="15" fill="rgb(208,67,9)"/><text x="96.9403%" y="654.50">r..</text></g><g><title>runscript (tests/sourmash_tst_utils.py:109) (16 samples, 1.89%)</title><rect x="96.6903%" y="660" width="1.8913%" height="15" fill="rgb(219,133,21)"/><text x="96.9403%" y="670.50">r..</text></g><g><title>_runscript (tests/sourmash_tst_utils.py:51) (16 samples, 1.89%)</title><rect x="96.6903%" y="676" width="1.8913%" height="15" fill="rgb(246,46,29)"/><text x="96.9403%" y="686.50">_..</text></g><g><title>_multicall (pluggy/callers.py:187) (737 samples, 87.12%)</title><rect x="11.5839%" y="484" width="87.1158%" height="15" fill="rgb(246,185,52)"/><text x="11.8339%" y="494.50">_multicall (pluggy/callers.py:187)</text></g><g><title>pytest_runtest_call (_pytest/runner.py:135) (737 samples, 87.12%)</title><rect x="11.5839%" y="500" width="87.1158%" height="15" fill="rgb(252,136,11)"/><text x="11.8339%" y="510.50">pytest_runtest_call (_pytest/runner.py:135)</text></g><g><title>runtest (_pytest/python.py:1477) (737 samples, 87.12%)</title><rect x="11.5839%" y="516" width="87.1158%" height="15" fill="rgb(219,138,53)"/><text x="11.8339%" y="526.50">runtest (_pytest/python.py:1477)</text></g><g><title>__call__ (pluggy/hooks.py:286) (737 samples, 87.12%)</title><rect x="11.5839%" y="532" width="87.1158%" height="15" fill="rgb(211,51,23)"/><text x="11.8339%" y="542.50">__call__ (pluggy/hooks.py:286)</text></g><g><title>_hookexec (pluggy/manager.py:93) (737 samples, 87.12%)</title><rect x="11.5839%" y="548" width="87.1158%" height="15" fill="rgb(247,221,28)"/><text x="11.8339%" y="558.50">_hookexec (pluggy/manager.py:93)</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (737 samples, 87.12%)</title><rect x="11.5839%" y="564" width="87.1158%" height="15" fill="rgb(251,222,45)"/><text x="11.8339%" y="574.50">&lt;lambda&gt; (pluggy/manager.py:87)</text></g><g><title>call_and_report (_pytest/runner.py:186) (740 samples, 87.47%)</title><rect x="11.5839%" y="372" width="87.4704%" height="15" fill="rgb(217,162,53)"/><text x="11.8339%" y="382.50">call_and_report (_pytest/runner.py:186)</text></g><g><title>call_runtest_hook (_pytest/runner.py:217) (740 samples, 87.47%)</title><rect x="11.5839%" y="388" width="87.4704%" height="15" fill="rgb(229,93,14)"/><text x="11.8339%" y="398.50">call_runtest_hook (_pytest/runner.py:217)</text></g><g><title>from_call (_pytest/runner.py:244) (740 samples, 87.47%)</title><rect x="11.5839%" y="404" width="87.4704%" height="15" fill="rgb(209,67,49)"/><text x="11.8339%" y="414.50">from_call (_pytest/runner.py:244)</text></g><g><title>&lt;lambda&gt; (_pytest/runner.py:217) (740 samples, 87.47%)</title><rect x="11.5839%" y="420" width="87.4704%" height="15" fill="rgb(213,87,29)"/><text x="11.8339%" y="430.50">&lt;lambda&gt; (_pytest/runner.py:217)</text></g><g><title>__call__ (pluggy/hooks.py:286) (740 samples, 87.47%)</title><rect x="11.5839%" y="436" width="87.4704%" height="15" fill="rgb(205,151,52)"/><text x="11.8339%" y="446.50">__call__ (pluggy/hooks.py:286)</text></g><g><title>_hookexec (pluggy/manager.py:93) (740 samples, 87.47%)</title><rect x="11.5839%" y="452" width="87.4704%" height="15" fill="rgb(253,215,39)"/><text x="11.8339%" y="462.50">_hookexec (pluggy/manager.py:93)</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (740 samples, 87.47%)</title><rect x="11.5839%" y="468" width="87.4704%" height="15" fill="rgb(221,220,41)"/><text x="11.8339%" y="478.50">&lt;lambda&gt; (pluggy/manager.py:87)</text></g><g><title>runtestprotocol (_pytest/runner.py:100) (742 samples, 87.71%)</title><rect x="11.5839%" y="356" width="87.7069%" height="15" fill="rgb(218,133,21)"/><text x="11.8339%" y="366.50">runtestprotocol (_pytest/runner.py:100)</text></g><g><title>all (846 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(221,193,43)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (py.test:8) (836 samples, 98.82%)</title><rect x="1.1820%" y="52" width="98.8180%" height="15" fill="rgb(240,128,52)"/><text x="1.4320%" y="62.50">&lt;module&gt; (py.test:8)</text></g><g><title>main (_pytest/config/__init__.py:125) (770 samples, 91.02%)</title><rect x="8.9835%" y="68" width="91.0165%" height="15" fill="rgb(253,114,12)"/><text x="9.2335%" y="78.50">main (_pytest/config/__init__.py:125)</text></g><g><title>__call__ (pluggy/hooks.py:286) (770 samples, 91.02%)</title><rect x="8.9835%" y="84" width="91.0165%" height="15" fill="rgb(215,223,47)"/><text x="9.2335%" y="94.50">__call__ (pluggy/hooks.py:286)</text></g><g><title>_hookexec (pluggy/manager.py:93) (770 samples, 91.02%)</title><rect x="8.9835%" y="100" width="91.0165%" height="15" fill="rgb(248,225,23)"/><text x="9.2335%" y="110.50">_hookexec (pluggy/manager.py:93)</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (770 samples, 91.02%)</title><rect x="8.9835%" y="116" width="91.0165%" height="15" fill="rgb(250,108,0)"/><text x="9.2335%" y="126.50">&lt;lambda&gt; (pluggy/manager.py:87)</text></g><g><title>_multicall (pluggy/callers.py:187) (770 samples, 91.02%)</title><rect x="8.9835%" y="132" width="91.0165%" height="15" fill="rgb(228,208,7)"/><text x="9.2335%" y="142.50">_multicall (pluggy/callers.py:187)</text></g><g><title>pytest_cmdline_main (_pytest/main.py:240) (770 samples, 91.02%)</title><rect x="8.9835%" y="148" width="91.0165%" height="15" fill="rgb(244,45,10)"/><text x="9.2335%" y="158.50">pytest_cmdline_main (_pytest/main.py:240)</text></g><g><title>wrap_session (_pytest/main.py:191) (768 samples, 90.78%)</title><rect x="9.2199%" y="164" width="90.7801%" height="15" fill="rgb(207,125,25)"/><text x="9.4699%" y="174.50">wrap_session (_pytest/main.py:191)</text></g><g><title>_main (_pytest/main.py:247) (748 samples, 88.42%)</title><rect x="11.5839%" y="180" width="88.4161%" height="15" fill="rgb(210,195,18)"/><text x="11.8339%" y="190.50">_main (_pytest/main.py:247)</text></g><g><title>__call__ (pluggy/hooks.py:286) (748 samples, 88.42%)</title><rect x="11.5839%" y="196" width="88.4161%" height="15" fill="rgb(249,80,12)"/><text x="11.8339%" y="206.50">__call__ (pluggy/hooks.py:286)</text></g><g><title>_hookexec (pluggy/manager.py:93) (748 samples, 88.42%)</title><rect x="11.5839%" y="212" width="88.4161%" height="15" fill="rgb(221,65,9)"/><text x="11.8339%" y="222.50">_hookexec (pluggy/manager.py:93)</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (748 samples, 88.42%)</title><rect x="11.5839%" y="228" width="88.4161%" height="15" fill="rgb(235,49,36)"/><text x="11.8339%" y="238.50">&lt;lambda&gt; (pluggy/manager.py:87)</text></g><g><title>_multicall (pluggy/callers.py:187) (748 samples, 88.42%)</title><rect x="11.5839%" y="244" width="88.4161%" height="15" fill="rgb(225,32,20)"/><text x="11.8339%" y="254.50">_multicall (pluggy/callers.py:187)</text></g><g><title>pytest_runtestloop (_pytest/main.py:272) (748 samples, 88.42%)</title><rect x="11.5839%" y="260" width="88.4161%" height="15" fill="rgb(215,141,46)"/><text x="11.8339%" y="270.50">pytest_runtestloop (_pytest/main.py:272)</text></g><g><title>__call__ (pluggy/hooks.py:286) (748 samples, 88.42%)</title><rect x="11.5839%" y="276" width="88.4161%" height="15" fill="rgb(250,160,47)"/><text x="11.8339%" y="286.50">__call__ (pluggy/hooks.py:286)</text></g><g><title>_hookexec (pluggy/manager.py:93) (748 samples, 88.42%)</title><rect x="11.5839%" y="292" width="88.4161%" height="15" fill="rgb(216,222,40)"/><text x="11.8339%" y="302.50">_hookexec (pluggy/manager.py:93)</text></g><g><title>&lt;lambda&gt; (pluggy/manager.py:87) (748 samples, 88.42%)</title><rect x="11.5839%" y="308" width="88.4161%" height="15" fill="rgb(234,217,39)"/><text x="11.8339%" y="318.50">&lt;lambda&gt; (pluggy/manager.py:87)</text></g><g><title>_multicall (pluggy/callers.py:187) (748 samples, 88.42%)</title><rect x="11.5839%" y="324" width="88.4161%" height="15" fill="rgb(207,178,40)"/><text x="11.8339%" y="334.50">_multicall (pluggy/callers.py:187)</text></g><g><title>pytest_runtest_protocol (_pytest/runner.py:85) (748 samples, 88.42%)</title><rect x="11.5839%" y="340" width="88.4161%" height="15" fill="rgb(221,136,13)"/><text x="11.8339%" y="350.50">pytest_runtest_protocol (_pytest/runner.py:85)</text></g></svg></svg>